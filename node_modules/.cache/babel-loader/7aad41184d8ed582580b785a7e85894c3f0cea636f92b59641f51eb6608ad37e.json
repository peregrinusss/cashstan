{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/GitHub/alfabank-cashbacks/src/components/CatPerson.jsx\";\nimport React from \"react\";\nimport CatItem from \"./CatItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CatPerson = ({\n  person,\n  dataPerson\n}) => {\n  const isSum = person === \"unsorted\";\n  const catItemClassName = isSum ? \"cat__sum\" : \"cat__item\";\n  // const cards = dataPerson\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: catItemClassName,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"cat__person\",\n      children: isSum ? \"Общий за месяц\" : person\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), dataPerson.cards.map(card => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = CatPerson;\nexport default CatPerson;\nvar _c;\n$RefreshReg$(_c, \"CatPerson\");","map":{"version":3,"names":["React","CatItem","jsxDEV","_jsxDEV","CatPerson","person","dataPerson","isSum","catItemClassName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cards","map","card","_c","$RefreshReg$"],"sources":["/Users/daniel/Desktop/GitHub/alfabank-cashbacks/src/components/CatPerson.jsx"],"sourcesContent":["import React from \"react\";\nimport CatItem from \"./CatItem\";\n\nconst CatPerson = ({ person, dataPerson }) => {\n  const isSum = person === \"unsorted\";\n  const catItemClassName = isSum ? \"cat__sum\" : \"cat__item\";\n  // const cards = dataPerson\n\n  return (\n    <div className={catItemClassName}>\n      <h2 className=\"cat__person\">{isSum ? \"Общий за месяц\" : person}</h2>\n      {dataPerson.cards.map(card => (\n        <span>{card}</span>\n      ))}\n      {/* <div className=\"cat__ul\">\n        {dataPerson.map((item) => (\n          <CatItem key={item.id} item={item} />\n        ))}\n      </div> */}\n    </div>\n  );\n};\n\nexport default CatPerson;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAW,CAAC,KAAK;EAC5C,MAAMC,KAAK,GAAGF,MAAM,KAAK,UAAU;EACnC,MAAMG,gBAAgB,GAAGD,KAAK,GAAG,UAAU,GAAG,WAAW;EACzD;;EAEA,oBACEJ,OAAA;IAAKM,SAAS,EAAED,gBAAiB;IAAAE,QAAA,gBAC/BP,OAAA;MAAIM,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEH,KAAK,GAAG,gBAAgB,GAAGF;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnER,UAAU,CAACS,KAAK,CAACC,GAAG,CAACC,IAAI,iBACxBd,OAAA;MAAAO,QAAA,EAAOO;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAMC,CAAC;AAEV,CAAC;AAACI,EAAA,GAlBId,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}